import { hasWebsiteChanged, getSitemapUrl } from "./utils.js";
/**
 * Start monitoring loop.
 * - trigger: async function to call when a change is detected
 * Returns { stop(): Promise<void> } which will stop the loop cleanly.
 */
export function startMonitor(opts, trigger) {
    const { rootUrl, intervalMs = 1000 * 60 * 10, // default 10 minutes
    userAgent, preferSitemap = true, outputDir = process.cwd(), onChange, onError, } = opts;
    let running = true;
    let timer = null;
    async function checkOnce() {
        if (!running)
            return;
        try {
            const target = preferSitemap ? getSitemapUrl(rootUrl) : rootUrl;
            const changed = await hasWebsiteChanged([target], outputDir, userAgent);
            if (changed) {
                let triggerRes = null;
                try {
                    triggerRes = await trigger();
                    if (onChange)
                        onChange(triggerRes);
                }
                catch (err) {
                    if (onError)
                        onError(err);
                }
            }
        }
        catch (err) {
            if (onError)
                onError(err);
        }
    }
    async function loop() {
        await checkOnce();
        if (running) {
            timer = setTimeout(loop, intervalMs);
        }
    }
    loop();
    return {
        stop() {
            running = false;
            if (timer)
                clearTimeout(timer);
        },
    };
}
